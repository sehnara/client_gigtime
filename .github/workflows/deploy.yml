# This is a basic workflow to help you get started with Actions

name: React build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    environment: react_env
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            
            
      - name: Generate Environment
        run: |
          echo "REACT_APP_KAKAO_INIT_KEY=$REACT_APP_KAKAO_INIT_KEY" >> .env.production
          echo "REACT_APP_ROUTE_PATH=$REACT_APP_ROUTE_PATH" >> .env.production
          echo "REACT_APP_S3_PATH=$REACT_APP_S3_PATH" >> .env.production
          echo "REACT_APP_SOCKET_SERVER=$REACT_APP_SOCKET_SERVER" >> .env.production
        env:
          REACT_APP_KAKAO_INIT_KEY: ${{ secrets.REACT_APP_KAKAO_INIT_KEY }}
          REACT_APP_ROUTE_PATH: ${{ secrets.REACT_APP_ROUTE_PATH }}
          REACT_APP_S3_PATH: ${{secrets.REACT_APP_S3_PATH}}
          REACT_APP_SOCKET_SERVER: ${{secrets.REACT_APP_SOCKET_SERVER}}
            
      - name: Install Dependencies
        run: yarn install
      
      - name: Build
        run: yarn build
        env:
          CI: "" 
       
      - name: test
        run: ls
       
      - name: SCP Command to Transfer Files
        uses: appleboy/scp-action@v0.1.3
        with:
          username: ${{secrets.SSH_USER}}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: '${{secrets.SOURCE_PATH}}'
          target: "/home/ubuntu"
          strip_components: 2
          
    

